
DATA = {
    "ACM certificate": "acm_certificate",
    "ACMPCA certificate": "acmpca_certificate",
    "ACMPCA certificate authority": "acmpca_certificate_authority",
    "ami": "ami",
    "ami IDs": "ami_ids",
    "API gateway API key": "api_gateway_api_key",
    "API gateway domain name": "api_gateway_domain_name",
    "API gateway resource": "api_gateway_resource",
    "API gateway rest API": "api_gateway_rest_api",
    "API gateway vpc link": "api_gateway_vpc_link",
    "API gateway V two API": "apigatewayv2_api",
    "API gateway V two APIs": "apigatewayv2_apis",
    "app mesh mesh": "appmesh_mesh",
    "app mesh virtual service": "appmesh_virtual_service",
    "arn": "arn",
    "autoscaling group": "autoscaling_group",
    "autoscaling groups": "autoscaling_groups",
    "availability zone": "availability_zone",
    "availability zones": "availability_zones",
    "backup plan": "backup_plan",
    "backup selection": "backup_selection",
    "backup vault": "backup_vault",
    "batch compute environment": "batch_compute_environment",
    "batch job queue": "batch_job_queue",
    "billing service account": "billing_service_account",
    "caller identity": "caller_identity",
    "canonical user ID": "canonical_user_id",
    "cloud control API resource": "cloudcontrolapi_resource",
    "cloud formation export": "cloudformation_export",
    "cloud formation stack": "cloudformation_stack",
    "cloud formation type": "cloudformation_type",
    "cloud front cache policy": "cloudfront_cache_policy",
    "cloud front distribution": "cloudfront_distribution",
    "cloud front function": "cloudfront_function",
    "cloud front log delivery canonical user ID": "cloudfront_log_delivery_canonical_user_id",
    "cloud front origin request policy": "cloudfront_origin_request_policy",
    "cloud HSM V two cluster": "cloudhsm_v2_cluster",
    "cloud trail service account": "cloudtrail_service_account",
    "cloud watch event connection": "cloudwatch_event_connection",
    "cloud watch event source": "cloudwatch_event_source",
    "cloud watch log group": "cloudwatch_log_group",
    "cloud watch log groups": "cloudwatch_log_groups",
    "code artifact authorization token": "codeartifact_authorization_token",
    "code artifact repository endpoint": "codeartifact_repository_endpoint",
    "code commit repository": "codecommit_repository",
    "code star connections connection": "codestarconnections_connection",
    "cognito user pools": "cognito_user_pools",
    "connect contact flow": "connect_contact_flow",
    "connect instance": "connect_instance",
    "cur report definition": "cur_report_definition",
    "customer gateway": "customer_gateway",
    "DB cluster snapshot": "db_cluster_snapshot",
    "DB event categories": "db_event_categories",
    "DB instance": "db_instance",
    "DB proxy": "db_proxy",
    "DB snapshot": "db_snapshot",
    "DB subnet group": "db_subnet_group",
    "default tags": "default_tags",
    "directory service directory": "directory_service_directory",
    "doc DB engine version": "docdb_engine_version",
    "doc DB orderable DB instance": "docdb_orderable_db_instance",
    "DX connection": "dx_connection",
    "DX gateway": "dx_gateway",
    "DX location": "dx_location",
    "DX locations": "dx_locations",
    "dynamo cDB table": "dynamodb_table",
    "EBS default kms key": "ebs_default_kms_key",
    "EBS encryption by default": "ebs_encryption_by_default",
    "EBS snapshot": "ebs_snapshot",
    "EBS snapshot IDs": "ebs_snapshot_ids",
    "EBS volume": "ebs_volume",
    "EBS volumes": "ebs_volumes",
    "EC two coip pool": "ec2_coip_pool",
    "EC two coip pools": "ec2_coip_pools",
    "EC two host": "ec2_host",
    "EC two instance type": "ec2_instance_type",
    "EC two instance type offering": "ec2_instance_type_offering",
    "EC two instance type offerings": "ec2_instance_type_offerings",
    "EC two local gateway": "ec2_local_gateway",
    "EC two local gateway route table": "ec2_local_gateway_route_table",
    "EC two local gateway route tables": "ec2_local_gateway_route_tables",
    "EC two local gateway virtual interface": "ec2_local_gateway_virtual_interface",
    "EC two local gateway virtual interface group": "ec2_local_gateway_virtual_interface_group",
    "EC two local gateway virtual interface groups": "ec2_local_gateway_virtual_interface_groups",
    "EC two local gateways": "ec2_local_gateways",
    "EC two managed prefix list": "ec2_managed_prefix_list",
    "EC two spot price": "ec2_spot_price",
    "EC two transit gateway": "ec2_transit_gateway",
    "EC two transit gateway dx gateway attachment": "ec2_transit_gateway_dx_gateway_attachment",
    "EC two transit gateway peering attachment": "ec2_transit_gateway_peering_attachment",
    "EC two transit gateway route table": "ec2_transit_gateway_route_table",
    "EC two transit gateway route tables": "ec2_transit_gateway_route_tables",
    "EC two transit gateway vpc attachment": "ec2_transit_gateway_vpc_attachment",
    "EC two transit gateway vpn attachment": "ec2_transit_gateway_vpn_attachment",
    "ECR authorization token": "ecr_authorization_token",
    "ECR image": "ecr_image",
    "ECR repository": "ecr_repository",
    "ECS cluster": "ecs_cluster",
    "ECS container definition": "ecs_container_definition",
    "ECS service": "ecs_service",
    "ECS task definition": "ecs_task_definition",
    "EFS access point": "efs_access_point",
    "EFS access points": "efs_access_points",
    "EFS file system": "efs_file_system",
    "EFS mount target": "efs_mount_target",
    "EIP": "eip",
    "EKS addon": "eks_addon",
    "EKS cluster": "eks_cluster",
    "EKS cluster auth": "eks_cluster_auth",
    "EKS clusters": "eks_clusters",
    "EKS node group": "eks_node_group",
    "EKS node groups": "eks_node_groups",
    "elastic beanstalk application": "elastic_beanstalk_application",
    "elastic beanstalk hosted zone": "elastic_beanstalk_hosted_zone",
    "elastic beanstalk solution stack": "elastic_beanstalk_solution_stack",
    "elastic cache cluster": "elasticache_cluster",
    "elastic cache replication group": "elasticache_replication_group",
    "elastic cache user": "elasticache_user",
    "elastic search domain": "elasticsearch_domain",
    "ELB": "elb",
    "ELB hosted zone ID": "elb_hosted_zone_id",
    "ELB service account": "elb_service_account",
    "global accelerator accelerator": "globalaccelerator_accelerator",
    "glue connection": "glue_connection",
    "glue data catalog encryption settings": "glue_data_catalog_encryption_settings",
    "glue script": "glue_script",
    "guard duty detector": "guardduty_detector",
    "I am account alias": "iam_account_alias",
    "I am group": "iam_group",
    "I am instance profile": "iam_instance_profile",
    "I am policy": "iam_policy",
    "I am policy document": "iam_policy_document",
    "I am role": "iam_role",
    "I am roles": "iam_roles",
    "I am server certificate": "iam_server_certificate",
    "I am session context": "iam_session_context",
    "I am user": "iam_user",
    "I am users": "iam_users",
    "identity store group": "identitystore_group",
    "identity store user": "identitystore_user",
    "image builder component": "imagebuilder_component",
    "image builder distribution configuration": "imagebuilder_distribution_configuration",
    "image builder image": "imagebuilder_image",
    "image builder image pipeline": "imagebuilder_image_pipeline",
    "image builder image recipe": "imagebuilder_image_recipe",
    "image builder infrastructure configuration": "imagebuilder_infrastructure_configuration",
    "inspector rules packages": "inspector_rules_packages",
    "instance": "instance",
    "instances": "instances",
    "internet gateway": "internet_gateway",
    "iot endpoint": "iot_endpoint",
    "ip ranges": "ip_ranges",
    "kinesis firehose delivery stream": "kinesis_firehose_delivery_stream",
    "kinesis stream": "kinesis_stream",
    "kinesis stream consumer": "kinesis_stream_consumer",
    "KMS alias": "kms_alias",
    "KMS ciphertext": "kms_ciphertext",
    "KMS key": "kms_key",
    "KMS public key": "kms_public_key",
    "KMS secret": "kms_secret",
    "KMS secrets": "kms_secrets",
    "lake formation data lake settings": "lakeformation_data_lake_settings",
    "lake formation permissions": "lakeformation_permissions",
    "lake formation resource": "lakeformation_resource",
    "lambda alias": "lambda_alias",
    "lambda code signing config": "lambda_code_signing_config",
    "lambda function": "lambda_function",
    "lambda invocation": "lambda_invocation",
    "lambda layer version": "lambda_layer_version",
    "launch configuration": "launch_configuration",
    "launch template": "launch_template",
    "LB": "lb",
    "LB listener": "lb_listener",
    "LB target group": "lb_target_group",
    "lex bot": "lex_bot",
    "lex bot alias": "lex_bot_alias",
    "lex intent": "lex_intent",
    "lex slot type": "lex_slot_type",
    "MQ broker": "mq_broker",
    "MSK broker nodes": "msk_broker_nodes",
    "MSK cluster": "msk_cluster",
    "MSK configuration": "msk_configuration",
    "MSK kafka version": "msk_kafka_version",
    "nat gateway": "nat_gateway",
    "neptune engine version": "neptune_engine_version",
    "neptune orderable DB instance": "neptune_orderable_db_instance",
    "network ACLs": "network_acls",
    "network interface": "network_interface",
    "network interfaces": "network_interfaces",
    "organizations delegated administrators": "organizations_delegated_administrators",
    "organizations delegated services": "organizations_delegated_services",
    "organizations organization": "organizations_organization",
    "organizations organizational units": "organizations_organizational_units",
    "outposts outpost": "outposts_outpost",
    "outposts outpost instance type": "outposts_outpost_instance_type",
    "outposts outpost instance types": "outposts_outpost_instance_types",
    "outposts outposts": "outposts_outposts",
    "outposts site": "outposts_site",
    "outposts sites": "outposts_sites",
    "partition": "partition",
    "prefix list": "prefix_list",
    "pricing product": "pricing_product",
    "QLDB ledger": "qldb_ledger",
    "ram resource share": "ram_resource_share",
    "RDS certificate": "rds_certificate",
    "RDS cluster": "rds_cluster",
    "RDS engine version": "rds_engine_version",
    "RDS orderable DB instance": "rds_orderable_db_instance",
    "redshift cluster": "redshift_cluster",
    "redshift orderable cluster": "redshift_orderable_cluster",
    "redshift service account": "redshift_service_account",
    "region": "region",
    "regions": "regions",
    "resource groups tagging API resources": "resourcegroupstaggingapi_resources",
    "route": "route",
    "route table": "route_table",
    "route tables": "route_tables",
    "route fifty three delegation set": "route53_delegation_set",
    "route fifty three resolver endpoint": "route53_resolver_endpoint",
    "route fifty three resolver rule": "route53_resolver_rule",
    "route fifty three resolver rules": "route53_resolver_rules",
    "route fifty three zone": "route53_zone",
    "S three bucket": "s3_bucket",
    "S three bucket object": "s3_bucket_object",
    "S three bucket objects": "s3_bucket_objects",
    "sagemaker prebuilt ecr image": "sagemaker_prebuilt_ecr_image",
    "secretsmanager secret": "secretsmanager_secret",
    "secretsmanager secret rotation": "secretsmanager_secret_rotation",
    "secretsmanager secret version": "secretsmanager_secret_version",
    "security group": "security_group",
    "security groups": "security_groups",
    "serverless application repository application": "serverlessapplicationrepository_application",
    "service discovery dns namespace": "service_discovery_dns_namespace",
    "service catalog constraint": "servicecatalog_constraint",
    "service catalog launch paths": "servicecatalog_launch_paths",
    "service catalog portfolio": "servicecatalog_portfolio",
    "service catalog portfolio constraints": "servicecatalog_portfolio_constraints",
    "service catalog product": "servicecatalog_product",
    "service quotas service": "servicequotas_service",
    "service quotas service quota": "servicequotas_service_quota",
    "SFN activity": "sfn_activity",
    "SFN state machine": "sfn_state_machine",
    "signer signing job": "signer_signing_job",
    "signer signing profile": "signer_signing_profile",
    "SNS topic": "sns_topic",
    "SQS queue": "sqs_queue",
    "SSM document": "ssm_document",
    "SSM parameter": "ssm_parameter",
    "SSM parameters by path": "ssm_parameters_by_path",
    "SSM patch baseline": "ssm_patch_baseline",
    "SSO admin instances": "ssoadmin_instances",
    "SSO admin permission set": "ssoadmin_permission_set",
    "storagegateway local disk": "storagegateway_local_disk",
    "subnet": "subnet",
    "subnet IDs": "subnet_ids",
    "subnets": "subnets",
    "transfer server": "transfer_server",
    "VPC": "vpc",
    "VPC DHCP options": "vpc_dhcp_options",
    "VPC endpoint": "vpc_endpoint",
    "VPC endpoint service": "vpc_endpoint_service",
    "VPC peering connection": "vpc_peering_connection",
    "VPC peering connections": "vpc_peering_connections",
    "VPCs": "vpcs",
    "VPN gateway": "vpn_gateway",
    "waf ipset": "waf_ipset",
    "waf rate based rule": "waf_rate_based_rule",
    "waf rule": "waf_rule",
    "waf web ACL": "waf_web_acl",
    "waf regional ipset": "wafregional_ipset",
    "waf regional rate based rule": "wafregional_rate_based_rule",
    "waf regional rule": "wafregional_rule",
    "waf regional web ACL": "wafregional_web_acl",
    "waf V two ip set": "wafv2_ip_set",
    "waf V two regex pattern set": "wafv2_regex_pattern_set",
    "waf V two rule group": "wafv2_rule_group",
    "waf V two web ACL": "wafv2_web_acl",
    "workspaces bundle": "workspaces_bundle",
    "workspaces directory": "workspaces_directory",
    "workspaces image": "workspaces_image",
    "workspaces workspace": "workspaces_workspace"
}

RESOURCES = {
    "accessanalyzer analyzer": "accessanalyzer_analyzer",
    "acm certificate": "acm_certificate",
    "acm certificate validation": "acm_certificate_validation",
    "acmpca certificate": "acmpca_certificate",
    "acmpca certificate authority": "acmpca_certificate_authority",
    "acmpca certificate authority certificate": "acmpca_certificate_authority_certificate",
    "ami": "ami",
    "ami copy": "ami_copy",
    "ami from instance": "ami_from_instance",
    "ami launch permission": "ami_launch_permission",
    "amplify app": "amplify_app",
    "amplify backend environment": "amplify_backend_environment",
    "amplify branch": "amplify_branch",
    "amplify domain association": "amplify_domain_association",
    "amplify webhook": "amplify_webhook",
    "API gateway account": "api_gateway_account",
    "API gateway api key": "api_gateway_api_key",
    "API gateway authorizer": "api_gateway_authorizer",
    "API gateway base path mapping": "api_gateway_base_path_mapping",
    "API gateway client certificate": "api_gateway_client_certificate",
    "API gateway deployment": "api_gateway_deployment",
    "API gateway documentation part": "api_gateway_documentation_part",
    "API gateway documentation version": "api_gateway_documentation_version",
    "API gateway domain name": "api_gateway_domain_name",
    "API gateway gateway response": "api_gateway_gateway_response",
    "API gateway integration": "api_gateway_integration",
    "API gateway integration response": "api_gateway_integration_response",
    "API gateway method": "api_gateway_method",
    "API gateway method response": "api_gateway_method_response",
    "API gateway method settings": "api_gateway_method_settings",
    "API gateway model": "api_gateway_model",
    "API gateway request validator": "api_gateway_request_validator",
    "API gateway resource": "api_gateway_resource",
    "API gateway rest api": "api_gateway_rest_api",
    "API gateway rest api policy": "api_gateway_rest_api_policy",
    "API gateway stage": "api_gateway_stage",
    "API gateway usage plan": "api_gateway_usage_plan",
    "API gateway usage plan key": "api_gateway_usage_plan_key",
    "API gateway vpc link": "api_gateway_vpc_link",
    "API gateway V two api": "apigatewayv2_api",
    "API gateway V two api mapping": "apigatewayv2_api_mapping",
    "API gateway V two authorizer": "apigatewayv2_authorizer",
    "API gateway V two deployment": "apigatewayv2_deployment",
    "API gateway V two domain name": "apigatewayv2_domain_name",
    "API gateway V two integration": "apigatewayv2_integration",
    "API gateway V two integration response": "apigatewayv2_integration_response",
    "API gateway V two model": "apigatewayv2_model",
    "API gateway V two route": "apigatewayv2_route",
    "API gateway V two route response": "apigatewayv2_route_response",
    "API gateway V two stage": "apigatewayv2_stage",
    "API gateway V two vpc link": "apigatewayv2_vpc_link",
    "app cookie stickiness policy": "app_cookie_stickiness_policy",
    "app autoscaling policy": "appautoscaling_policy",
    "app autoscaling scheduled action": "appautoscaling_scheduled_action",
    "app autoscaling target": "appautoscaling_target",
    "app config application": "appconfig_application",
    "app config configuration profile": "appconfig_configuration_profile",
    "app config deployment": "appconfig_deployment",
    "app config deployment strategy": "appconfig_deployment_strategy",
    "app config environment": "appconfig_environment",
    "app config hosted configuration version": "appconfig_hosted_configuration_version",
    "app mesh gateway route": "appmesh_gateway_route",
    "app mesh mesh": "appmesh_mesh",
    "app mesh route": "appmesh_route",
    "app mesh virtual gateway": "appmesh_virtual_gateway",
    "app mesh virtual node": "appmesh_virtual_node",
    "app mesh virtual router": "appmesh_virtual_router",
    "app mesh virtual service": "appmesh_virtual_service",
    "app runner auto scaling configuration version": "apprunner_auto_scaling_configuration_version",
    "app runner connection": "apprunner_connection",
    "app runner custom domain association": "apprunner_custom_domain_association",
    "app runner service": "apprunner_service",
    "app stream fleet": "appstream_fleet",
    "app stream image builder": "appstream_image_builder",
    "app stream stack": "appstream_stack",
    "app sync api key": "appsync_api_key",
    "app sync datasource": "appsync_datasource",
    "app sync function": "appsync_function",
    "app sync graphql api": "appsync_graphql_api",
    "app sync resolver": "appsync_resolver",
    "athena database": "athena_database",
    "athena named query": "athena_named_query",
    "athena workgroup": "athena_workgroup",
    "autoscaling attachment": "autoscaling_attachment",
    "autoscaling group": "autoscaling_group",
    "autoscaling group tag": "autoscaling_group_tag",
    "autoscaling lifecycle hook": "autoscaling_lifecycle_hook",
    "autoscaling notification": "autoscaling_notification",
    "autoscaling policy": "autoscaling_policy",
    "autoscaling schedule": "autoscaling_schedule",
    "autoscaling plans scaling plan": "autoscalingplans_scaling_plan",
    "backup global settings": "backup_global_settings",
    "backup plan": "backup_plan",
    "backup region settings": "backup_region_settings",
    "backup selection": "backup_selection",
    "backup vault": "backup_vault",
    "backup vault notifications": "backup_vault_notifications",
    "backup vault policy": "backup_vault_policy",
    "batch compute environment": "batch_compute_environment",
    "batch job definition": "batch_job_definition",
    "batch job queue": "batch_job_queue",
    "budgets budget": "budgets_budget",
    "budgets budget action": "budgets_budget_action",
    "chime voice connector": "chime_voice_connector",
    "chime voice connector group": "chime_voice_connector_group",
    "chime voice connector logging": "chime_voice_connector_logging",
    "chime voice connector origination": "chime_voice_connector_origination",
    "chime voice connector streaming": "chime_voice_connector_streaming",
    "chime voice connector termination": "chime_voice_connector_termination",
    "chime voice connector termination credentials": "chime_voice_connector_termination_credentials",
    "cloud nine environment EC two": "cloud9_environment_ec2",
    "cloud control api resource": "cloudcontrolapi_resource",
    "cloud formation stack": "cloudformation_stack",
    "cloud formation stack set": "cloudformation_stack_set",
    "cloud formation stack set instance": "cloudformation_stack_set_instance",
    "cloud formation type": "cloudformation_type",
    "cloud front cache policy": "cloudfront_cache_policy",
    "cloud front distribution": "cloudfront_distribution",
    "cloud front function": "cloudfront_function",
    "cloud front key group": "cloudfront_key_group",
    "cloud front monitoring subscription": "cloudfront_monitoring_subscription",
    "cloud front origin access identity": "cloudfront_origin_access_identity",
    "cloud front origin request policy": "cloudfront_origin_request_policy",
    "cloud front public key": "cloudfront_public_key",
    "cloud front realtime log config": "cloudfront_realtime_log_config",
    "cloud hsm V two cluster": "cloudhsm_v2_cluster",
    "cloud hsm V two hsm": "cloudhsm_v2_hsm",
    "cloud trail": "cloudtrail",
    "cloud watch composite alarm": "cloudwatch_composite_alarm",
    "cloud watch dashboard": "cloudwatch_dashboard",
    "cloud watch event api destination": "cloudwatch_event_api_destination",
    "cloud watch event archive": "cloudwatch_event_archive",
    "cloud watch event bus": "cloudwatch_event_bus",
    "cloud watch event bus policy": "cloudwatch_event_bus_policy",
    "cloud watch event connection": "cloudwatch_event_connection",
    "cloud watch event permission": "cloudwatch_event_permission",
    "cloud watch event rule": "cloudwatch_event_rule",
    "cloud watch event target": "cloudwatch_event_target",
    "cloud watch log destination": "cloudwatch_log_destination",
    "cloud watch log destination policy": "cloudwatch_log_destination_policy",
    "cloud watch log group": "cloudwatch_log_group",
    "cloud watch log metric filter": "cloudwatch_log_metric_filter",
    "cloud watch log resource policy": "cloudwatch_log_resource_policy",
    "cloud watch log stream": "cloudwatch_log_stream",
    "cloud watch log subscription filter": "cloudwatch_log_subscription_filter",
    "cloud watch metric alarm": "cloudwatch_metric_alarm",
    "cloud watch metric stream": "cloudwatch_metric_stream",
    "cloud watch query definition": "cloudwatch_query_definition",
    "code artifact domain": "codeartifact_domain",
    "code artifact domain permissions policy": "codeartifact_domain_permissions_policy",
    "code artifact repository": "codeartifact_repository",
    "code artifact repository permissions policy": "codeartifact_repository_permissions_policy",
    "code build project": "codebuild_project",
    "code build report group": "codebuild_report_group",
    "code build source credential": "codebuild_source_credential",
    "code build webhook": "codebuild_webhook",
    "code commit repository": "codecommit_repository",
    "code commit trigger": "codecommit_trigger",
    "code deploy app": "codedeploy_app",
    "code deploy deployment config": "codedeploy_deployment_config",
    "code deploy deployment group": "codedeploy_deployment_group",
    "code pipeline": "codepipeline",
    "code pipeline webhook": "codepipeline_webhook",
    "code star connections connection": "codestarconnections_connection",
    "code star connections host": "codestarconnections_host",
    "code star notifications notification rule": "codestarnotifications_notification_rule",
    "cognito identity pool": "cognito_identity_pool",
    "cognito identity pool roles attachment": "cognito_identity_pool_roles_attachment",
    "cognito identity provider": "cognito_identity_provider",
    "cognito resource server": "cognito_resource_server",
    "cognito user group": "cognito_user_group",
    "cognito user pool": "cognito_user_pool",
    "cognito user pool client": "cognito_user_pool_client",
    "cognito user pool domain": "cognito_user_pool_domain",
    "cognito user pool ui customization": "cognito_user_pool_ui_customization",
    "config aggregate authorization": "config_aggregate_authorization",
    "config config rule": "config_config_rule",
    "config configuration aggregator": "config_configuration_aggregator",
    "config configuration recorder": "config_configuration_recorder",
    "config configuration recorder status": "config_configuration_recorder_status",
    "config conformance pack": "config_conformance_pack",
    "config delivery channel": "config_delivery_channel",
    "config organization conformance pack": "config_organization_conformance_pack",
    "config organization custom rule": "config_organization_custom_rule",
    "config organization managed rule": "config_organization_managed_rule",
    "config remediation configuration": "config_remediation_configuration",
    "connect contact flow": "connect_contact_flow",
    "connect instance": "connect_instance",
    "cur report definition": "cur_report_definition",
    "customer gateway": "customer_gateway",
    "data pipeline pipeline": "datapipeline_pipeline",
    "data sync agent": "datasync_agent",
    "data sync location efs": "datasync_location_efs",
    "data sync location fsx windows file system": "datasync_location_fsx_windows_file_system",
    "data sync location nfs": "datasync_location_nfs",
    "data sync location s3": "datasync_location_s3",
    "data sync location smb": "datasync_location_smb",
    "data sync task": "datasync_task",
    "dax cluster": "dax_cluster",
    "dax parameter group": "dax_parameter_group",
    "dax subnet group": "dax_subnet_group",
    "DB cluster snapshot": "db_cluster_snapshot",
    "DB event subscription": "db_event_subscription",
    "DB instance": "db_instance",
    "DB instance role association": "db_instance_role_association",
    "DB option group": "db_option_group",
    "DB parameter group": "db_parameter_group",
    "DB proxy": "db_proxy",
    "DB proxy default target group": "db_proxy_default_target_group",
    "DB proxy endpoint": "db_proxy_endpoint",
    "DB proxy target": "db_proxy_target",
    "DB security group": "db_security_group",
    "DB snapshot": "db_snapshot",
    "DB subnet group": "db_subnet_group",
    "default network acl": "default_network_acl",
    "default route table": "default_route_table",
    "default security group": "default_security_group",
    "default subnet": "default_subnet",
    "default vpc": "default_vpc",
    "default vpc dhcp options": "default_vpc_dhcp_options",
    "device farm project": "devicefarm_project",
    "directory service conditional forwarder": "directory_service_conditional_forwarder",
    "directory service directory": "directory_service_directory",
    "directory service log subscription": "directory_service_log_subscription",
    "dlm lifecycle policy": "dlm_lifecycle_policy",
    "dms certificate": "dms_certificate",
    "dms endpoint": "dms_endpoint",
    "dms event subscription": "dms_event_subscription",
    "dms replication instance": "dms_replication_instance",
    "dms replication subnet group": "dms_replication_subnet_group",
    "dms replication task": "dms_replication_task",
    "doc db cluster": "docdb_cluster",
    "doc db cluster instance": "docdb_cluster_instance",
    "doc db cluster parameter group": "docdb_cluster_parameter_group",
    "doc db cluster snapshot": "docdb_cluster_snapshot",
    "doc db subnet group": "docdb_subnet_group",
    "dx bgp peer": "dx_bgp_peer",
    "dx connection": "dx_connection",
    "dx connection association": "dx_connection_association",
    "dx connection confirmation": "dx_connection_confirmation",
    "dx gateway": "dx_gateway",
    "dx gateway association": "dx_gateway_association",
    "dx gateway association proposal": "dx_gateway_association_proposal",
    "dx hosted connection": "dx_hosted_connection",
    "dx hosted private virtual interface": "dx_hosted_private_virtual_interface",
    "dx hosted private virtual interface accepter": "dx_hosted_private_virtual_interface_accepter",
    "dx hosted public virtual interface": "dx_hosted_public_virtual_interface",
    "dx hosted public virtual interface accepter": "dx_hosted_public_virtual_interface_accepter",
    "dx hosted transit virtual interface": "dx_hosted_transit_virtual_interface",
    "dx hosted transit virtual interface accepter": "dx_hosted_transit_virtual_interface_accepter",
    "dx lag": "dx_lag",
    "dx private virtual interface": "dx_private_virtual_interface",
    "dx public virtual interface": "dx_public_virtual_interface",
    "dx transit virtual interface": "dx_transit_virtual_interface",
    "dynamo DB global table": "dynamodb_global_table",
    "dynamo DB kinesis streaming destination": "dynamodb_kinesis_streaming_destination",
    "dynamo DB table": "dynamodb_table",
    "dynamo DB table item": "dynamodb_table_item",
    "dynamo DB tag": "dynamodb_tag",
    "EBS default kms key": "ebs_default_kms_key",
    "EBS encryption by default": "ebs_encryption_by_default",
    "EBS snapshot": "ebs_snapshot",
    "EBS snapshot copy": "ebs_snapshot_copy",
    "EBS snapshot import": "ebs_snapshot_import",
    "EBS volume": "ebs_volume",
    "EC two availability zone group": "ec2_availability_zone_group",
    "EC two capacity reservation": "ec2_capacity_reservation",
    "EC two carrier gateway": "ec2_carrier_gateway",
    "EC two client vpn authorization rule": "ec2_client_vpn_authorization_rule",
    "EC two client vpn endpoint": "ec2_client_vpn_endpoint",
    "EC two client vpn network association": "ec2_client_vpn_network_association",
    "EC two client vpn route": "ec2_client_vpn_route",
    "EC two fleet": "ec2_fleet",
    "EC two host": "ec2_host",
    "EC two local gateway route": "ec2_local_gateway_route",
    "EC two local gateway route table vpc association": "ec2_local_gateway_route_table_vpc_association",
    "EC two managed prefix list": "ec2_managed_prefix_list",
    "EC two managed prefix list entry": "ec2_managed_prefix_list_entry",
    "EC two tag": "ec2_tag",
    "EC two traffic mirror filter": "ec2_traffic_mirror_filter",
    "EC two traffic mirror filter rule": "ec2_traffic_mirror_filter_rule",
    "EC two traffic mirror session": "ec2_traffic_mirror_session",
    "EC two traffic mirror target": "ec2_traffic_mirror_target",
    "EC two transit gateway": "ec2_transit_gateway",
    "EC two transit gateway peering attachment": "ec2_transit_gateway_peering_attachment",
    "EC two transit gateway peering attachment accepter": "ec2_transit_gateway_peering_attachment_accepter",
    "EC two transit gateway prefix list reference": "ec2_transit_gateway_prefix_list_reference",
    "EC two transit gateway route": "ec2_transit_gateway_route",
    "EC two transit gateway route table": "ec2_transit_gateway_route_table",
    "EC two transit gateway route table association": "ec2_transit_gateway_route_table_association",
    "EC two transit gateway route table propagation": "ec2_transit_gateway_route_table_propagation",
    "EC two transit gateway vpc attachment": "ec2_transit_gateway_vpc_attachment",
    "EC two transit gateway vpc attachment accepter": "ec2_transit_gateway_vpc_attachment_accepter",
    "ECR lifecycle policy": "ecr_lifecycle_policy",
    "ECR registry policy": "ecr_registry_policy",
    "ECR replication configuration": "ecr_replication_configuration",
    "ECR repository": "ecr_repository",
    "ECR repository policy": "ecr_repository_policy",
    "ECR public repository": "ecrpublic_repository",
    "ECS capacity provider": "ecs_capacity_provider",
    "ECS cluster": "ecs_cluster",
    "ECS service": "ecs_service",
    "ECS tag": "ecs_tag",
    "ECS task definition": "ecs_task_definition",
    "EFS access point": "efs_access_point",
    "EFS backup policy": "efs_backup_policy",
    "EFS file system": "efs_file_system",
    "EFS file system policy": "efs_file_system_policy",
    "EFS mount target": "efs_mount_target",
    "egress only internet gateway": "egress_only_internet_gateway",
    "EIP": "eip",
    "EIP association": "eip_association",
    "EKS addon": "eks_addon",
    "EKS cluster": "eks_cluster",
    "EKS fargate profile": "eks_fargate_profile",
    "EKS identity provider config": "eks_identity_provider_config",
    "EKS node group": "eks_node_group",
    "elastic beanstalk application": "elastic_beanstalk_application",
    "elastic beanstalk application version": "elastic_beanstalk_application_version",
    "elastic beanstalk configuration template": "elastic_beanstalk_configuration_template",
    "elastic beanstalk environment": "elastic_beanstalk_environment",
    "elastic cache cluster": "elasticache_cluster",
    "elastic cache global replication group": "elasticache_global_replication_group",
    "elastic cache parameter group": "elasticache_parameter_group",
    "elastic cache replication group": "elasticache_replication_group",
    "elastic cache security group": "elasticache_security_group",
    "elastic cache subnet group": "elasticache_subnet_group",
    "elastic cache user": "elasticache_user",
    "elastic cache user group": "elasticache_user_group",
    "elastic search domain": "elasticsearch_domain",
    "elastic search domain policy": "elasticsearch_domain_policy",
    "elastic search domain saml options": "elasticsearch_domain_saml_options",
    "elastic transcoder pipeline": "elastictranscoder_pipeline",
    "elastic transcoder preset": "elastictranscoder_preset",
    "ELB": "elb",
    "ELB attachment": "elb_attachment",
    "EMR cluster": "emr_cluster",
    "EMR instance fleet": "emr_instance_fleet",
    "EMR instance group": "emr_instance_group",
    "EMR managed scaling policy": "emr_managed_scaling_policy",
    "EMR security configuration": "emr_security_configuration",
    "flow log": "flow_log",
    "FMS admin account": "fms_admin_account",
    "FMS policy": "fms_policy",
    "FSX backup": "fsx_backup",
    "FSX lustre file system": "fsx_lustre_file_system",
    "FSX ontap file system": "fsx_ontap_file_system",
    "FSX windows file system": "fsx_windows_file_system",
    "game lift alias": "gamelift_alias",
    "game lift build": "gamelift_build",
    "game lift fleet": "gamelift_fleet",
    "game lift game session queue": "gamelift_game_session_queue",
    "glacier vault": "glacier_vault",
    "glacier vault lock": "glacier_vault_lock",
    "global accelerator accelerator": "globalaccelerator_accelerator",
    "global accelerator endpoint group": "globalaccelerator_endpoint_group",
    "global accelerator listener": "globalaccelerator_listener",
    "glue catalog database": "glue_catalog_database",
    "glue catalog table": "glue_catalog_table",
    "glue classifier": "glue_classifier",
    "glue connection": "glue_connection",
    "glue crawler": "glue_crawler",
    "glue data catalog encryption settings": "glue_data_catalog_encryption_settings",
    "glue dev endpoint": "glue_dev_endpoint",
    "glue job": "glue_job",
    "glue ml transform": "glue_ml_transform",
    "glue partition": "glue_partition",
    "glue partition index": "glue_partition_index",
    "glue registry": "glue_registry",
    "glue resource policy": "glue_resource_policy",
    "glue schema": "glue_schema",
    "glue security configuration": "glue_security_configuration",
    "glue trigger": "glue_trigger",
    "glue user defined function": "glue_user_defined_function",
    "glue workflow": "glue_workflow",
    "guard duty detector": "guardduty_detector",
    "guard duty filter": "guardduty_filter",
    "guard duty invite accepter": "guardduty_invite_accepter",
    "guard duty ipset": "guardduty_ipset",
    "guard duty member": "guardduty_member",
    "guard duty organization admin account": "guardduty_organization_admin_account",
    "guard duty organization configuration": "guardduty_organization_configuration",
    "guard duty publishing destination": "guardduty_publishing_destination",
    "guard duty threatintelset": "guardduty_threatintelset",
    "I am access key": "iam_access_key",
    "I am account alias": "iam_account_alias",
    "I am account password policy": "iam_account_password_policy",
    "I am group": "iam_group",
    "I am group membership": "iam_group_membership",
    "I am group policy": "iam_group_policy",
    "I am group policy attachment": "iam_group_policy_attachment",
    "I am instance profile": "iam_instance_profile",
    "I am openid connect provider": "iam_openid_connect_provider",
    "I am policy": "iam_policy",
    "I am policy attachment": "iam_policy_attachment",
    "I am role": "iam_role",
    "I am role policy": "iam_role_policy",
    "I am role policy attachment": "iam_role_policy_attachment",
    "I am saml provider": "iam_saml_provider",
    "I am server certificate": "iam_server_certificate",
    "I am service linked role": "iam_service_linked_role",
    "I am user": "iam_user",
    "I am user group membership": "iam_user_group_membership",
    "I am user login profile": "iam_user_login_profile",
    "I am user policy": "iam_user_policy",
    "I am user policy attachment": "iam_user_policy_attachment",
    "I am user ssh key": "iam_user_ssh_key",
    "image builder component": "imagebuilder_component",
    "image builder distribution configuration": "imagebuilder_distribution_configuration",
    "image builder image": "imagebuilder_image",
    "image builder image pipeline": "imagebuilder_image_pipeline",
    "image builder image recipe": "imagebuilder_image_recipe",
    "image builder infrastructure configuration": "imagebuilder_infrastructure_configuration",
    "inspector assessment target": "inspector_assessment_target",
    "inspector assessment template": "inspector_assessment_template",
    "inspector resource group": "inspector_resource_group",
    "instance": "instance",
    "internet gateway": "internet_gateway",
    "IOT authorizer": "iot_authorizer",
    "IOT certificate": "iot_certificate",
    "IOT policy": "iot_policy",
    "IOT policy attachment": "iot_policy_attachment",
    "IOT role alias": "iot_role_alias",
    "IOT thing": "iot_thing",
    "IOT thing principal attachment": "iot_thing_principal_attachment",
    "IOT thing type": "iot_thing_type",
    "IOT topic rule": "iot_topic_rule",
    "key pair": "key_pair",
    "kinesis analytics application": "kinesis_analytics_application",
    "kinesis firehose delivery stream": "kinesis_firehose_delivery_stream",
    "kinesis stream": "kinesis_stream",
    "kinesis stream consumer": "kinesis_stream_consumer",
    "kinesis video stream": "kinesis_video_stream",
    "kinesis analytics V two application": "kinesisanalyticsv2_application",
    "kinesis analytics V two application snapshot": "kinesisanalyticsv2_application_snapshot",
    "KMS alias": "kms_alias",
    "KMS ciphertext": "kms_ciphertext",
    "KMS external key": "kms_external_key",
    "KMS grant": "kms_grant",
    "KMS key": "kms_key",
    "lake formation data lake settings": "lakeformation_data_lake_settings",
    "lake formation permissions": "lakeformation_permissions",
    "lake formation resource": "lakeformation_resource",
    "lambda alias": "lambda_alias",
    "lambda code signing config": "lambda_code_signing_config",
    "lambda event source mapping": "lambda_event_source_mapping",
    "lambda function": "lambda_function",
    "lambda function event invoke config": "lambda_function_event_invoke_config",
    "lambda layer version": "lambda_layer_version",
    "lambda permission": "lambda_permission",
    "lambda provisioned concurrency config": "lambda_provisioned_concurrency_config",
    "launch configuration": "launch_configuration",
    "launch template": "launch_template",
    "LB": "lb",
    "LB cookie stickiness policy": "lb_cookie_stickiness_policy",
    "LB listener": "lb_listener",
    "LB listener certificate": "lb_listener_certificate",
    "LB listener rule": "lb_listener_rule",
    "LB ssl negotiation policy": "lb_ssl_negotiation_policy",
    "LB target group": "lb_target_group",
    "LB target group attachment": "lb_target_group_attachment",
    "lex bot": "lex_bot",
    "lex bot alias": "lex_bot_alias",
    "lex intent": "lex_intent",
    "lex slot type": "lex_slot_type",
    "license manager association": "licensemanager_association",
    "license manager license configuration": "licensemanager_license_configuration",
    "light sail domain": "lightsail_domain",
    "light sail instance": "lightsail_instance",
    "light sail instance public ports": "lightsail_instance_public_ports",
    "light sail key pair": "lightsail_key_pair",
    "light sail static ip": "lightsail_static_ip",
    "light sail static ip attachment": "lightsail_static_ip_attachment",
    "load balancer backend server policy": "load_balancer_backend_server_policy",
    "load balancer listener policy": "load_balancer_listener_policy",
    "load balancer policy": "load_balancer_policy",
    "macie member account association": "macie_member_account_association",
    "macie S three bucket association": "macie_s3_bucket_association",
    "macie 2 account": "macie2_account",
    "macie 2 classification job": "macie2_classification_job",
    "macie 2 custom data identifier": "macie2_custom_data_identifier",
    "macie 2 findings filter": "macie2_findings_filter",
    "macie 2 invitation accepter": "macie2_invitation_accepter",
    "macie 2 member": "macie2_member",
    "macie 2 organization admin account": "macie2_organization_admin_account",
    "main route table association": "main_route_table_association",
    "media convert queue": "media_convert_queue",
    "media package channel": "media_package_channel",
    "media store container": "media_store_container",
    "media store container policy": "media_store_container_policy",
    "MQ broker": "mq_broker",
    "MQ configuration": "mq_configuration",
    "MSK cluster": "msk_cluster",
    "MSK configuration": "msk_configuration",
    "MSK scram secret association": "msk_scram_secret_association",
    "mwaa environment": "mwaa_environment",
    "nat gateway": "nat_gateway",
    "neptune cluster": "neptune_cluster",
    "neptune cluster endpoint": "neptune_cluster_endpoint",
    "neptune cluster instance": "neptune_cluster_instance",
    "neptune cluster parameter group": "neptune_cluster_parameter_group",
    "neptune cluster snapshot": "neptune_cluster_snapshot",
    "neptune event subscription": "neptune_event_subscription",
    "neptune parameter group": "neptune_parameter_group",
    "neptune subnet group": "neptune_subnet_group",
    "network ACL": "network_acl",
    "network ACL rule": "network_acl_rule",
    "network interface": "network_interface",
    "network interface attachment": "network_interface_attachment",
    "network interface SG attachment": "network_interface_sg_attachment",
    "network firewall firewall": "networkfirewall_firewall",
    "network firewall firewall policy": "networkfirewall_firewall_policy",
    "network firewall logging configuration": "networkfirewall_logging_configuration",
    "network firewall resource policy": "networkfirewall_resource_policy",
    "network firewall rule group": "networkfirewall_rule_group",
    "ops works application": "opsworks_application",
    "ops works custom layer": "opsworks_custom_layer",
    "ops works ganglia layer": "opsworks_ganglia_layer",
    "ops works haproxy layer": "opsworks_haproxy_layer",
    "ops works instance": "opsworks_instance",
    "ops works java app layer": "opsworks_java_app_layer",
    "ops works memcached layer": "opsworks_memcached_layer",
    "ops works mysql layer": "opsworks_mysql_layer",
    "ops works nodejs app layer": "opsworks_nodejs_app_layer",
    "ops works permission": "opsworks_permission",
    "ops works php app layer": "opsworks_php_app_layer",
    "ops works rails app layer": "opsworks_rails_app_layer",
    "ops works rds db instance": "opsworks_rds_db_instance",
    "ops works stack": "opsworks_stack",
    "ops works static web layer": "opsworks_static_web_layer",
    "ops works user profile": "opsworks_user_profile",
    "organizations account": "organizations_account",
    "organizations delegated administrator": "organizations_delegated_administrator",
    "organizations organization": "organizations_organization",
    "organizations organizational unit": "organizations_organizational_unit",
    "organizations policy": "organizations_policy",
    "organizations policy attachment": "organizations_policy_attachment",
    "pinpoint adm channel": "pinpoint_adm_channel",
    "pinpoint apns channel": "pinpoint_apns_channel",
    "pinpoint apns sandbox channel": "pinpoint_apns_sandbox_channel",
    "pinpoint apns voip channel": "pinpoint_apns_voip_channel",
    "pinpoint apns voip sandbox channel": "pinpoint_apns_voip_sandbox_channel",
    "pinpoint app": "pinpoint_app",
    "pinpoint baidu channel": "pinpoint_baidu_channel",
    "pinpoint email channel": "pinpoint_email_channel",
    "pinpoint event stream": "pinpoint_event_stream",
    "pinpoint gcm channel": "pinpoint_gcm_channel",
    "pinpoint sms channel": "pinpoint_sms_channel",
    "placement group": "placement_group",
    "prometheus workspace": "prometheus_workspace",
    "proxy protocol policy": "proxy_protocol_policy",
    "QLDB ledger": "qldb_ledger",
    "quicksight data source": "quicksight_data_source",
    "quicksight group": "quicksight_group",
    "quicksight group membership": "quicksight_group_membership",
    "quicksight user": "quicksight_user",
    "ram principal association": "ram_principal_association",
    "ram resource association": "ram_resource_association",
    "ram resource share": "ram_resource_share",
    "ram resource share accepter": "ram_resource_share_accepter",
    "RDS cluster": "rds_cluster",
    "RDS cluster endpoint": "rds_cluster_endpoint",
    "RDS cluster instance": "rds_cluster_instance",
    "RDS cluster parameter group": "rds_cluster_parameter_group",
    "RDS cluster role association": "rds_cluster_role_association",
    "RDS global cluster": "rds_global_cluster",
    "redshift cluster": "redshift_cluster",
    "redshift event subscription": "redshift_event_subscription",
    "redshift parameter group": "redshift_parameter_group",
    "redshift scheduled action": "redshift_scheduled_action",
    "redshift security group": "redshift_security_group",
    "redshift snapshot copy grant": "redshift_snapshot_copy_grant",
    "redshift snapshot schedule": "redshift_snapshot_schedule",
    "redshift snapshot schedule association": "redshift_snapshot_schedule_association",
    "redshift subnet group": "redshift_subnet_group",
    "resource groups group": "resourcegroups_group",
    "route": "route",
    "route table": "route_table",
    "route table association": "route_table_association",
    "route fifty three delegation set": "route53_delegation_set",
    "route fifty three health check": "route53_health_check",
    "route fifty three hosted zone dnssec": "route53_hosted_zone_dnssec",
    "route fifty three key signing key": "route53_key_signing_key",
    "route fifty three query log": "route53_query_log",
    "route fifty three record": "route53_record",
    "route fifty three resolver dnssec config": "route53_resolver_dnssec_config",
    "route fifty three resolver endpoint": "route53_resolver_endpoint",
    "route fifty three resolver firewall config": "route53_resolver_firewall_config",
    "route fifty three resolver firewall domain list": "route53_resolver_firewall_domain_list",
    "route fifty three resolver firewall rule": "route53_resolver_firewall_rule",
    "route fifty three resolver firewall rule group": "route53_resolver_firewall_rule_group",
    "route fifty three resolver firewall rule group association": "route53_resolver_firewall_rule_group_association",
    "route fifty three resolver query log config": "route53_resolver_query_log_config",
    "route fifty three resolver query log config association": "route53_resolver_query_log_config_association",
    "route fifty three resolver rule": "route53_resolver_rule",
    "route fifty three resolver rule association": "route53_resolver_rule_association",
    "route fifty three VPC association authorization": "route53_vpc_association_authorization",
    "route fifty three zone": "route53_zone",
    "route fifty three zone association": "route53_zone_association",
    "route fifty three recovery control config cluster": "route53recoverycontrolconfig_cluster",
    "route fifty three recovery control config control panel": "route53recoverycontrolconfig_control_panel",
    "route fifty three recovery control config routing control": "route53recoverycontrolconfig_routing_control",
    "route fifty three recovery control config safety rule": "route53recoverycontrolconfig_safety_rule",
    "route fifty three recovery readiness cell": "route53recoveryreadiness_cell",
    "route fifty three recovery readiness readiness check": "route53recoveryreadiness_readiness_check",
    "route fifty three recovery readiness recovery group": "route53recoveryreadiness_recovery_group",
    "route fifty three recovery readiness resource set": "route53recoveryreadiness_resource_set",
    "S three access point": "s3_access_point",
    "S three account public access block": "s3_account_public_access_block",
    "S three bucket": "s3_bucket",
    "S three bucket analytics configuration": "s3_bucket_analytics_configuration",
    "S three bucket inventory": "s3_bucket_inventory",
    "S three bucket metric": "s3_bucket_metric",
    "S three bucket notification": "s3_bucket_notification",
    "S three bucket object": "s3_bucket_object",
    "S three bucket ownership controls": "s3_bucket_ownership_controls",
    "S three bucket policy": "s3_bucket_policy",
    "S three bucket public access block": "s3_bucket_public_access_block",
    "S three object copy": "s3_object_copy",
    "S three control bucket": "s3control_bucket",
    "S three control bucket lifecycle configuration": "s3control_bucket_lifecycle_configuration",
    "S three control bucket policy": "s3control_bucket_policy",
    "S three outposts endpoint": "s3outposts_endpoint",
    "sagemaker app": "sagemaker_app",
    "sagemaker app image config": "sagemaker_app_image_config",
    "sagemaker code repository": "sagemaker_code_repository",
    "sagemaker device fleet": "sagemaker_device_fleet",
    "sagemaker domain": "sagemaker_domain",
    "sagemaker endpoint": "sagemaker_endpoint",
    "sagemaker endpoint configuration": "sagemaker_endpoint_configuration",
    "sagemaker feature group": "sagemaker_feature_group",
    "sagemaker flow definition": "sagemaker_flow_definition",
    "sagemaker human task ui": "sagemaker_human_task_ui",
    "sagemaker image": "sagemaker_image",
    "sagemaker image version": "sagemaker_image_version",
    "sagemaker model": "sagemaker_model",
    "sagemaker model package group": "sagemaker_model_package_group",
    "sagemaker model package group policy": "sagemaker_model_package_group_policy",
    "sagemaker notebook instance": "sagemaker_notebook_instance",
    "sagemaker notebook instance lifecycle configuration": "sagemaker_notebook_instance_lifecycle_configuration",
    "sagemaker studio lifecycle config": "sagemaker_studio_lifecycle_config",
    "sagemaker user profile": "sagemaker_user_profile",
    "sagemaker workforce": "sagemaker_workforce",
    "sagemaker workteam": "sagemaker_workteam",
    "schemas discoverer": "schemas_discoverer",
    "schemas registry": "schemas_registry",
    "schemas schema": "schemas_schema",
    "secrets manager secret": "secretsmanager_secret",
    "secrets manager secret policy": "secretsmanager_secret_policy",
    "secrets manager secret rotation": "secretsmanager_secret_rotation",
    "secrets manager secret version": "secretsmanager_secret_version",
    "security group": "security_group",
    "security group rule": "security_group_rule",
    "security hub account": "securityhub_account",
    "security hub action target": "securityhub_action_target",
    "security hub insight": "securityhub_insight",
    "security hub invite accepter": "securityhub_invite_accepter",
    "security hub member": "securityhub_member",
    "security hub organization admin account": "securityhub_organization_admin_account",
    "security hub organization configuration": "securityhub_organization_configuration",
    "security hub product subscription": "securityhub_product_subscription",
    "security hub standards control": "securityhub_standards_control",
    "security hub standards subscription": "securityhub_standards_subscription",
    "serverless application repository cloudformation stack": "serverlessapplicationrepository_cloudformation_stack",
    "service discovery http namespace": "service_discovery_http_namespace",
    "service discovery instance": "service_discovery_instance",
    "service discovery private dns namespace": "service_discovery_private_dns_namespace",
    "service discovery public dns namespace": "service_discovery_public_dns_namespace",
    "service discovery service": "service_discovery_service",
    "service catalog budget resource association": "servicecatalog_budget_resource_association",
    "service catalog constraint": "servicecatalog_constraint",
    "service catalog organizations access": "servicecatalog_organizations_access",
    "service catalog portfolio": "servicecatalog_portfolio",
    "service catalog portfolio share": "servicecatalog_portfolio_share",
    "service catalog principal portfolio association": "servicecatalog_principal_portfolio_association",
    "service catalog product": "servicecatalog_product",
    "service catalog product portfolio association": "servicecatalog_product_portfolio_association",
    "service catalog provisioned product": "servicecatalog_provisioned_product",
    "service catalog provisioning artifact": "servicecatalog_provisioning_artifact",
    "service catalog service action": "servicecatalog_service_action",
    "service catalog tag option": "servicecatalog_tag_option",
    "service catalog tag option resource association": "servicecatalog_tag_option_resource_association",
    "service quotas service quota": "servicequotas_service_quota",
    "SES active receipt rule set": "ses_active_receipt_rule_set",
    "SES configuration set": "ses_configuration_set",
    "SES domain dkim": "ses_domain_dkim",
    "SES domain identity": "ses_domain_identity",
    "SES domain identity verification": "ses_domain_identity_verification",
    "SES domain mail from": "ses_domain_mail_from",
    "SES email identity": "ses_email_identity",
    "SES event destination": "ses_event_destination",
    "SES identity notification topic": "ses_identity_notification_topic",
    "SES identity policy": "ses_identity_policy",
    "SES receipt filter": "ses_receipt_filter",
    "SES receipt rule": "ses_receipt_rule",
    "SES receipt rule set": "ses_receipt_rule_set",
    "SES template": "ses_template",
    "SFN activity": "sfn_activity",
    "SFN state machine": "sfn_state_machine",
    "shield protection": "shield_protection",
    "shield protection group": "shield_protection_group",
    "signer signing job": "signer_signing_job",
    "signer signing profile": "signer_signing_profile",
    "signer signing profile permission": "signer_signing_profile_permission",
    "simple DB domain": "simpledb_domain",
    "snapshot create volume permission": "snapshot_create_volume_permission",
    "SNS platform application": "sns_platform_application",
    "SNS sms preferences": "sns_sms_preferences",
    "SNS topic": "sns_topic",
    "SNS topic policy": "sns_topic_policy",
    "SNS topic subscription": "sns_topic_subscription",
    "spot datafeed subscription": "spot_datafeed_subscription",
    "spot fleet request": "spot_fleet_request",
    "spot instance request": "spot_instance_request",
    "SQS queue": "sqs_queue",
    "SQS queue policy": "sqs_queue_policy",
    "SSM activation": "ssm_activation",
    "SSM association": "ssm_association",
    "SSM document": "ssm_document",
    "SSM maintenance window": "ssm_maintenance_window",
    "SSM maintenance window target": "ssm_maintenance_window_target",
    "SSM maintenance window task": "ssm_maintenance_window_task",
    "SSM parameter": "ssm_parameter",
    "SSM patch baseline": "ssm_patch_baseline",
    "SSM patch group": "ssm_patch_group",
    "SSM resource data sync": "ssm_resource_data_sync",
    "SSO admin account assignment": "ssoadmin_account_assignment",
    "SSO admin managed policy attachment": "ssoadmin_managed_policy_attachment",
    "SSO admin permission set": "ssoadmin_permission_set",
    "SSO admin permission set inline policy": "ssoadmin_permission_set_inline_policy",
    "storage gateway cache": "storagegateway_cache",
    "storage gateway cached iscsi volume": "storagegateway_cached_iscsi_volume",
    "storage gateway file system association": "storagegateway_file_system_association",
    "storage gateway gateway": "storagegateway_gateway",
    "storage gateway nfs file share": "storagegateway_nfs_file_share",
    "storage gateway smb file share": "storagegateway_smb_file_share",
    "storage gateway stored iscsi volume": "storagegateway_stored_iscsi_volume",
    "storage gateway tape pool": "storagegateway_tape_pool",
    "storage gateway upload buffer": "storagegateway_upload_buffer",
    "storage gateway working storage": "storagegateway_working_storage",
    "subnet": "subnet",
    "swf domain": "swf_domain",
    "synthetics canary": "synthetics_canary",
    "timestreamwrite database": "timestreamwrite_database",
    "timestreamwrite table": "timestreamwrite_table",
    "transfer access": "transfer_access",
    "transfer server": "transfer_server",
    "transfer ssh key": "transfer_ssh_key",
    "transfer user": "transfer_user",
    "volume attachment": "volume_attachment",
    "VPC": "vpc",
    "VPC dhcp options": "vpc_dhcp_options",
    "VPC dhcp options association": "vpc_dhcp_options_association",
    "VPC endpoint": "vpc_endpoint",
    "VPC endpoint connection notification": "vpc_endpoint_connection_notification",
    "VPC endpoint route table association": "vpc_endpoint_route_table_association",
    "VPC endpoint service": "vpc_endpoint_service",
    "VPC endpoint service allowed principal": "vpc_endpoint_service_allowed_principal",
    "VPC endpoint subnet association": "vpc_endpoint_subnet_association",
    "VPC IPV four cidr block association": "vpc_ipv4_cidr_block_association",
    "VPC peering connection": "vpc_peering_connection",
    "VPC peering connection accepter": "vpc_peering_connection_accepter",
    "VPC peering connection options": "vpc_peering_connection_options",
    "VPN connection": "vpn_connection",
    "VPN connection route": "vpn_connection_route",
    "VPN gateway": "vpn_gateway",
    "VPN gateway attachment": "vpn_gateway_attachment",
    "VPN gateway route propagation": "vpn_gateway_route_propagation",
    "waf byte match set": "waf_byte_match_set",
    "waf geo match set": "waf_geo_match_set",
    "waf ipset": "waf_ipset",
    "waf rate based rule": "waf_rate_based_rule",
    "waf regex match set": "waf_regex_match_set",
    "waf regex pattern set": "waf_regex_pattern_set",
    "waf rule": "waf_rule",
    "waf rule group": "waf_rule_group",
    "waf size constraint set": "waf_size_constraint_set",
    "waf sql injection match set": "waf_sql_injection_match_set",
    "waf web acl": "waf_web_acl",
    "waf xss match set": "waf_xss_match_set",
    "waf regional byte match set": "wafregional_byte_match_set",
    "waf regional geo match set": "wafregional_geo_match_set",
    "waf regional ipset": "wafregional_ipset",
    "waf regional rate based rule": "wafregional_rate_based_rule",
    "waf regional regex match set": "wafregional_regex_match_set",
    "waf regional regex pattern set": "wafregional_regex_pattern_set",
    "waf regional rule": "wafregional_rule",
    "waf regional rule group": "wafregional_rule_group",
    "waf regional size constraint set": "wafregional_size_constraint_set",
    "waf regional sql injection match set": "wafregional_sql_injection_match_set",
    "waf regional web acl": "wafregional_web_acl",
    "waf regional web acl association": "wafregional_web_acl_association",
    "waf regional xss match set": "wafregional_xss_match_set",
    "waf V two ip set": "wafv2_ip_set",
    "waf V two regex pattern set": "wafv2_regex_pattern_set",
    "waf V two rule group": "wafv2_rule_group",
    "waf V two web acl": "wafv2_web_acl",
    "waf V two web acl association": "wafv2_web_acl_association",
    "waf V two web acl logging configuration": "wafv2_web_acl_logging_configuration",
    "work link fleet": "worklink_fleet",
    "work link website certificate authority association": "worklink_website_certificate_authority_association",
    "workspaces directory": "workspaces_directory",
    "workspaces ip group": "workspaces_ip_group",
    "workspaces workspace": "workspaces_workspace",
    "x-ray encryption config": "xray_encryption_config",
    "x-ray group": "xray_group",
    "x-ray sampling rule": "xray_sampling_rule"
}
