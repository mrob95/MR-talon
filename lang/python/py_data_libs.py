from talon import ui, Module, Context, registry, actions, imgui, cron

mod = Module()
ctx = Context("python")
ctx.matches = r"""
tag: user.python
"""

mod.list("py_lib_pandas")
ctx.lists["user.py_lib_pandas"] = {
    # Module
    "Categorical": "pd.Categorical",
    "Data Frame": "pd.DataFrame",
    "Date Offset": "pd.DateOffset",
    "Excel File": "pd.ExcelFile",
    "Excel Writer": "pd.ExcelWriter",
    "Grouper": "pd.Grouper",
    "H D F Store": "pd.HDFStore",
    "Interval": "pd.Interval",
    "NA": "pd.NA@",
    "N A T": "pd.NaT@",
    "Named Agg": "pd.NamedAgg",
    "Period": "pd.Period",
    "Series": "pd.Series",
    "Timedelta": "pd.Timedelta",
    "Timestamp": "pd.Timestamp",
    "api": "pd.api",
    "array": "pd.array",
    "arrays": "pd.arrays",
    "B date range": "pd.bdate_range",
    "compat": "pd.compat@",
    "concat": "pd.concat",
    "core": "pd.core@",
    "crosstab": "pd.crosstab",
    "cut": "pd.cut",
    "date range": "pd.date_range",
    "describe option": "pd.describe_option",
    "errors": "pd.errors@",
    "eval": "pd.eval",
    "factorize": "pd.factorize",
    "get dummies": "pd.get_dummies",
    "get option": "pd.get_option",
    "infer freq": "pd.infer_freq",
    "interval range": "pd.interval_range",
    "is NA": "pd.isna",
    "is null": "pd.isnull",
    "jason normalize": "pd.json_normalize",
    "lreshape": "pd.lreshape",
    "melt": "pd.melt",
    "merge": "pd.merge",
    "merge as of": "pd.merge_asof",
    "merge ordered": "pd.merge_ordered",
    "notna": "pd.notna",
    "notnull": "pd.notnull",
    "offsets": "pd.offsets",
    "option context": "pd.option_context",
    "options": "pd.options@",
    "pandas": "pd.pandas",
    "period range": "pd.period_range",
    "pivot": "pd.pivot",
    "pivot table": "pd.pivot_table",
    "plotting": "pd.plotting",
    "Q cut": "pd.qcut",
    "read clipboard": "pd.read_clipboard",
    "read CSV": "pd.read_csv",
    "read excel": "pd.read_excel",
    "read feather": "pd.read_feather",
    "read FWF": "pd.read_fwf",
    "read GBQ": "pd.read_gbq",
    "read HDF": "pd.read_hdf",
    "read HTML": "pd.read_html",
    "read jason": "pd.read_json",
    "read orc": "pd.read_orc",
    "read parquet": "pd.read_parquet",
    "read pickle": "pd.read_pickle",
    "read SAS": "pd.read_sas",
    "read SPSS": "pd.read_spss",
    "read sequel": "pd.read_sql",
    "read sequel query": "pd.read_sql_query",
    "read sequel table": "pd.read_sql_table",
    "read stata": "pd.read_stata",
    "read table": "pd.read_table",
    "reset option": "pd.reset_option",
    "set eng float format": "pd.set_eng_float_format",
    "set option": "pd.set_option",
    "show versions": "pd.show_versions",
    "timedelta range": "pd.timedelta_range",
    "to datetime": "pd.to_datetime",
    "to numeric": "pd.to_numeric",
    "to pickle": "pd.to_pickle",
    "to timedelta": "pd.to_timedelta",
    "time series": "pd.tseries@",
    "unique": "pd.unique",
    "util": "pd.util",
    "value counts": "pd.value_counts",
    "wide to long": "pd.wide_to_long",
    # Dataframe - different list??
    "T": "T",
    "abs": "abs",
    "add": "add",
    "add prefix": "add_prefix",
    "add suffix": "add_suffix",
    "agg": "agg",
    "aggregate": "aggregate",
    "align": "align",
    "all": "all",
    "any": "any",
    "append": "append",
    "apply": "apply",
    "applymap": "applymap",
    "as freq": "asfreq",
    "as of": "asof",
    "as sign": "assign",
    "as type": "astype",
    "at": "at",
    "at time": "at_time",
    "attrs": "attrs",
    "axes": "axes",
    "between time": "between_time",
    "B fill": "bfill",
    "bool": "bool",
    "box plot": "boxplot",
    "clip": "clip",
    "columns": "columns",
    "combine": "combine",
    "combine first": "combine_first",
    "convert dtypes": "convert_dtypes",
    "copy": "copy",
    "corr": "corr",
    "corr with": "corrwith",
    "count": "count",
    "cov": "cov",
    "cumulative max": "cummax",
    "cumulative min": "cummin",
    "cumulative prod": "cumprod",
    "cumulative sum": "cumsum",
    "describe": "describe",
    "diff": "diff",
    "div": "div",
    "divide": "divide",
    "dot": "dot",
    "drop": "drop",
    "drop columns": "drop([|], axis=1)",
    "drop duplicates": "drop_duplicates",
    "drop level": "droplevel",
    "drop NA": "dropna",
    "dtypes": "dtypes",
    "duplicated": "duplicated",
    "empty": "empty",
    "eq": "eq",
    "equals": "equals",
    "eval": "eval",
    "ewm": "ewm",
    "expanding": "expanding",
    "explode": "explode",
    "F fill": "ffill",
    "fill NA": "fillna",
    "filter": "filter",
    "first": "first",
    "first valid index": "first_valid_index",
    "floor divide": "floordiv",
    "from dict": "from_dict",
    "from records": "from_records",
    "get": "get",
    "group by": "groupby",
    "head": "head",
    "hist": "hist",
    "eye at": "iat",
    "index max": "idxmax",
    "index min": "idxmin",
    "eye lock": "iloc[[|]]",
    "index": "index",
    "infer objects": "infer_objects",
    "info": "info",
    "insert": "insert",
    "interpolate": "interpolate",
    "is in": "isin",
    "is NA": "isna",
    "is null": "isnull",
    "items": "items",
    "iter items": "iteritems",
    "iter rows": "iterrows",
    "iter tuples": "itertuples",
    "join": "join",
    "keys": "keys",
    "kurt": "kurt",
    "kurtosis": "kurtosis",
    "last": "last",
    "last valid index": "last_valid_index",
    "loc": "loc",
    "lookup": "lookup",
    "mad": "mad",
    "mask": "mask",
    "mean": "mean",
    "median": "median",
    "memory usage": "memory_usage",
    "merge": "merge",
    "mod": "mod",
    "mode": "mode",
    "mul": "mul",
    "multiply": "multiply",
    "N dim": "ndim",
    "N largest": "nlargest",
    "not na": "notna",
    "not null": "notnull",
    "N smallest": "nsmallest",
    "N unique": "nunique",
    "percent change": "pct_change",
    "pipe": "pipe",
    "pivot": "pivot",
    "plot": "plot",
    "pop": "pop",
    "pow": "pow",
    "prod": "prod",
    "product": "product",
    "quantile": "quantile",
    "query": "query",
    "radd": "radd",
    "rank": "rank",
    "reindex": "reindex",
    "reindex like": "reindex_like",
    "rename": "rename",
    "rename columns": "rename([|], axis=1)",
    "rename axis": "rename_axis",
    "reorder levels": "reorder_levels",
    "replace": "replace",
    "resample": "resample",
    "reset index": "reset_index",
    "R floor div": "rfloordiv",
    "R mod": "rmod",
    "R mul": "rmul",
    "rolling": "rolling",
    "round": "round",
    "R pow": "rpow",
    "R sub": "rsub",
    "R true div": "rtruediv",
    "sample": "sample",
    "select dtypes": "select_dtypes",
    "sem": "sem",
    "set axis": "set_axis",
    "set index": "set_index",
    "shape": "shape@",
    "shift": "shift",
    "size": "size@",
    "skew": "skew",
    "slice shift": "slice_shift",
    "sort index": "sort_index",
    "sort values": "sort_values",
    "sparse": "sparse",
    "squeeze": "squeeze",
    "stack": "stack",
    "standard": "std",
    "style": "style@",
    "sub": "sub",
    "subtract": "subtract",
    "sum": "sum",
    "swap axes": "swapaxes",
    "swap level": "swaplevel",
    "tail": "tail",
    "take": "take",
    "to clipboard": "to_clipboard",
    "to CSV": "to_csv([|], index=False)",
    "to dict": "to_dict",
    "to excel": "to_excel",
    "to feather": "to_feather",
    "to gbq": "to_gbq",
    "to hdf": "to_hdf",
    "to HTML": "to_html",
    "to jason": "to_json",
    "to latex": "to_latex",
    "to markdown": "to_markdown",
    "to numpy": "to_numpy",
    "to parquet": "to_parquet",
    "to period": "to_period",
    "to pickle": "to_pickle",
    "to records": "to_records",
    "to sequel": "to_sql",
    "to stata": "to_stata",
    "to string": "to_string",
    "to timestamp": "to_timestamp",
    "to xarray": "to_xarray",
    "transform": "transform",
    "transpose": "transpose",
    "true div": "truediv",
    "truncate": "truncate",
    "T shift": "tshift",
    "time zone convert": "tz_convert",
    "time zone localize": "tz_localize",
    "unstack": "unstack",
    "update": "update",
    "values": "values",
    "var": "var",
    "where": "where",
    # Strings
    "string capitalize": "str.capitalize",
    "string case fold": "str.casefold",
    "string cat": "str.cat",
    "string center": "str.center",
    "string contains": "str.contains",
    "string count": "str.count",
    "string decode": "str.decode",
    "string encode": "str.encode",
    "string ends with": "str.endswith",
    "string extract": "str.extract",
    "string extract all": "str.extractall",
    "string find": "str.find",
    "string find all": "str.findall",
    "string get": "str.get",
    "string get dummies": "str.get_dummies",
    "string index": "str.index",
    "string is alphanumeric": "str.isalnum",
    "string is alpha": "str.isalpha",
    "string is decimal": "str.isdecimal",
    "string is digit": "str.isdigit",
    "string is lower": "str.islower",
    "string is numeric": "str.isnumeric",
    "string is space": "str.isspace",
    "string is title": "str.istitle",
    "string is upper": "str.isupper",
    "string join": "str.join",
    "string length": "str.len",
    "string lower": "str.lower",
    "string L just": "str.ljust",
    "string L strip": "str.lstrip",
    "string match": "str.match",
    "string normalize": "str.normalize",
    "string pad": "str.pad",
    "string partition": "str.partition",
    "string repeat": "str.repeat",
    "string replace": "str.replace",
    "string R find": "str.rfind",
    "string R index": "str.rindex",
    "string R just": "str.rjust",
    "string R partition": "str.rpartition",
    "string R split": "str.rsplit",
    "string R strip": "str.rstrip",
    "string slice": "str.slice",
    "string slice replace": "str.slice_replace",
    "string split": "str.split",
    "string starts with": "str.startswith",
    "string strip": "str.strip",
    "string swap case": "str.swapcase",
    "string title": "str.title",
    "string translate": "str.translate",
    "string upper": "str.upper",
    "string wrap": "str.wrap",
    "string Z fill": "str.zfill",
}

mod.list("py_lib_numpy")
ctx.lists["user.py_lib_numpy"] = {
    "allow threads": "np.ALLOW_THREADS@",
    "axis error": "np.AxisError",
    "buff size": "np.BUFSIZE@",
    "clip": "np.CLIP@",
    "complex warning": "np.ComplexWarning",
    "data source": "np.DataSource",
    "error call": "np.ERR_CALL@",
    "error default": "np.ERR_DEFAULT@",
    "error ignore": "np.ERR_IGNORE@",
    "error log": "np.ERR_LOG@",
    "error print": "np.ERR_PRINT@",
    "error raise": "np.ERR_RAISE@",
    "error warn": "np.ERR_WARN@",
    "floating point support": "np.FLOATING_POINT_SUPPORT@",
    "fpe dividebyzero": "np.FPE_DIVIDEBYZERO@",
    "fpe invalid": "np.FPE_INVALID@",
    "fpe overflow": "np.FPE_OVERFLOW@",
    "fpe underflow": "np.FPE_UNDERFLOW@",
    "inf": "np.Inf@",
    "infinity": "np.Infinity@",
    "maxdims": "np.MAXDIMS@",
    "may share bounds": "np.MAY_SHARE_BOUNDS@",
    "may share exact": "np.MAY_SHARE_EXACT@",
    "mach ar": "np.MachAr",
    "module deprecation warning": "np.ModuleDeprecationWarning",
    "nan": "np.NAN@",
    "ninf": "np.NINF@",
    "nzero": "np.NZERO@",
    "na n": "np.NaN@",
    "pinf": "np.PINF@",
    "pzero": "np.PZERO@",
    "raise": "np.RAISE@",
    "rank warning": "np.RankWarning",
    "shift dividebyzero": "np.SHIFT_DIVIDEBYZERO@",
    "shift invalid": "np.SHIFT_INVALID@",
    "shift overflow": "np.SHIFT_OVERFLOW@",
    "shift underflow": "np.SHIFT_UNDERFLOW@",
    "scalar type": "np.ScalarType@",
    "tester": "np.Tester",
    "too hard error": "np.TooHardError",
    "ufunc bufsize default": "np.UFUNC_BUFSIZE_DEFAULT@",
    "ufunc pyvals name": "np.UFUNC_PYVALS_NAME@",
    "visible deprecation warning": "np.VisibleDeprecationWarning",
    "wrap": "np.WRAP@",
    "abs": "np.abs",
    "absolute": "np.absolute",
    "absolute import": "np.absolute_import@",
    "add": "np.add",
    "add docstring": "np.add_docstring",
    "add newdoc": "np.add_newdoc",
    "add newdoc ufunc": "np.add_newdoc_ufunc",
    "A len": "np.alen",
    "all": "np.all",
    "all close": "np.allclose",
    "all true": "np.alltrue",
    "A max": "np.amax",
    "A min": "np.amin",
    "angle": "np.angle",
    "any": "np.any",
    "append": "np.append",
    "apply along axis": "np.apply_along_axis",
    "apply over axes": "np.apply_over_axes",
    "arange": "np.arange",
    "arc cos": "np.arccos",
    "arc cos hype": "np.arccosh",
    "arc sin": "np.arcsin",
    "arc sin hype": "np.arcsinh",
    "arc tan": "np.arctan",
    "arc tan two": "np.arctan2",
    "arc tan hype": "np.arctanh",
    "arg max": "np.argmax",
    "arg min": "np.argmin",
    "arg partition": "np.argpartition",
    "arg sort": "np.argsort",
    "arg where": "np.argwhere",
    "around": "np.around",
    "array": "np.array",
    "array two string": "np.array2string",
    "array equal": "np.array_equal",
    "array equiv": "np.array_equiv",
    "array repr": "np.array_repr",
    "array split": "np.array_split",
    "array str": "np.array_str",
    "as anyarray": "np.asanyarray",
    "as array": "np.asarray",
    "as array chkfinite": "np.asarray_chkfinite",
    "as contiguous array": "np.ascontiguousarray",
    "as F array": "np.asfarray",
    "as fortran array": "np.asfortranarray",
    "as matrix": "np.asmatrix",
    "as scalar": "np.asscalar",
    "at least one D": "np.atleast_1d",
    "at least two D": "np.atleast_2d",
    "at least three D": "np.atleast_3d",
    "average": "np.average",
    "bartlett": "np.bartlett",
    "base repr": "np.base_repr",
    "binary repr": "np.binary_repr",
    "bincount": "np.bincount",
    "bitwise and": "np.bitwise_and",
    "bitwise not": "np.bitwise_not",
    "bitwise or": "np.bitwise_or",
    "bitwise xor": "np.bitwise_xor",
    "blackman": "np.blackman",
    "block": "np.block",
    "bmat": "np.bmat",
    "bool": "np.bool",
    "bool eight": "np.bool8",
    "broadcast": "np.broadcast",
    "broadcast arrays": "np.broadcast_arrays",
    "broadcast to": "np.broadcast_to",
    "bus day count": "np.busday_count",
    "bus day offset": "np.busday_offset",
    "bus day calendar": "np.busdaycalendar",
    "byte": "np.byte",
    "byte bounds": "np.byte_bounds",
    "bytes zero": "np.bytes0",
    "can cast": "np.can_cast",
    "cast": "np.cast@",
    "cbrt": "np.cbrt",
    "cdouble": "np.cdouble",
    "ceil": "np.ceil",
    "cfloat": "np.cfloat",
    "char": "np.char@",
    "character": "np.character",
    "char array": "np.chararray",
    "choose": "np.choose",
    "clip": "np.clip",
    "C long double": "np.clongdouble",
    "C long float": "np.clongfloat",
    "column stack": "np.column_stack",
    "common type": "np.common_type",
    "compare char arrays": "np.compare_chararrays",
    "compat": "np.compat@",
    "complex": "np.complex",
    "complex one two eight": "np.complex128",
    "complex sixty four": "np.complex64",
    "complex floating": "np.complexfloating",
    "compress": "np.compress",
    "concatenate": "np.concatenate",
    "conj": "np.conj",
    "conjugate": "np.conjugate",
    "convolve": "np.convolve",
    "copy": "np.copy",
    "copy sign": "np.copysign",
    "copy to": "np.copyto",
    "core": "np.core@",
    "correlate coefficients": "np.corrcoef",
    "correlate": "np.correlate",
    "cos": "np.cos",
    "cosh": "np.cosh",
    "count nonzero": "np.count_nonzero",
    "cov": "np.cov",
    "cross": "np.cross",
    "C single": "np.csingle",
    "C types lib": "np.ctypeslib@",
    "cum prod": "np.cumprod",
    "cum product": "np.cumproduct",
    "cum sum": "np.cumsum",
    "datetime sixty four": "np.datetime64",
    "datetime as string": "np.datetime_as_string",
    "datetime data": "np.datetime_data",
    "degrees to radians": "np.deg2rad",
    "degrees": "np.degrees",
    "delete": "np.delete",
    "deprecate": "np.deprecate",
    "deprecate with doc": "np.deprecate_with_doc",
    "diag": "np.diag",
    "diag indices": "np.diag_indices",
    "diag indices from": "np.diag_indices_from",
    "diag flat": "np.diagflat",
    "diagonal": "np.diagonal",
    "diff": "np.diff",
    "digitize": "np.digitize",
    "disp": "np.disp",
    "divide": "np.divide",
    "division": "np.division@",
    "divmod": "np.divmod",
    "dot": "np.dot",
    "double": "np.double",
    "dsplit": "np.dsplit",
    "dstack": "np.dstack",
    "dtype": "np.dtype",
    "E": "np.e@",
    "ediff one d": "np.ediff1d",
    "einsum": "np.einsum",
    "einsum path": "np.einsum_path",
    "emath": "np.emath@",
    "empty": "np.empty",
    "empty like": "np.empty_like",
    "equal": "np.equal",
    "errstate": "np.errstate",
    "euler gamma": "np.euler_gamma@",
    "exp": "np.exp",
    "exp two": "np.exp2",
    "expand dims": "np.expand_dims",
    "expm one": "np.expm1",
    "extract": "np.extract",
    "eye": "np.eye",
    "fabs": "np.fabs",
    "fast copy and transpose": "np.fastCopyAndTranspose",
    "fft": "np.fft@",
    "fill diagonal": "np.fill_diagonal",
    "find common type": "np.find_common_type",
    "finfo": "np.finfo",
    "fix": "np.fix",
    "flat iter": "np.flatiter",
    "flat nonzero": "np.flatnonzero",
    "flexible": "np.flexible",
    "flip": "np.flip",
    "fliplr": "np.fliplr",
    "flipud": "np.flipud",
    "float": "np.float",
    "float sixteen": "np.float16",
    "float thirty two": "np.float32",
    "float sixty four": "np.float64",
    "float power": "np.float_power",
    "floating": "np.floating",
    "floor": "np.floor",
    "floor divide": "np.floor_divide",
    "F max": "np.fmax",
    "F min": "np.fmin",
    "F mod": "np.fmod",
    "format float positional": "np.format_float_positional",
    "format float scientific": "np.format_float_scientific",
    "format parser": "np.format_parser",
    "frexp": "np.frexp",
    "from buffer": "np.frombuffer",
    "from file": "np.fromfile",
    "from function": "np.fromfunction",
    "from iter": "np.fromiter",
    "from pyfunc": "np.frompyfunc",
    "from regex": "np.fromregex",
    "from string": "np.fromstring",
    "full": "np.full",
    "full like": "np.full_like",
    "fv": "np.fv",
    "GCD": "np.gcd",
    "generic": "np.generic",
    "genfromtxt": "np.genfromtxt",
    "geomspace": "np.geomspace",
    "get array wrap": "np.get_array_wrap",
    "get include": "np.get_include",
    "get print options": "np.get_printoptions",
    "get buff size": "np.getbufsize",
    "get err": "np.geterr",
    "get err call": "np.geterrcall",
    "get err obj": "np.geterrobj",
    "gradient": "np.gradient",
    "greater": "np.greater",
    "greater equal": "np.greater_equal",
    "half": "np.half",
    "hamming": "np.hamming",
    "hanning": "np.hanning",
    "heaviside": "np.heaviside",
    "histogram": "np.histogram",
    "histogram two d": "np.histogram2d",
    "histogram bin edges": "np.histogram_bin_edges",
    "histogramdd": "np.histogramdd",
    "H split": "np.hsplit",
    "H stack": "np.hstack",
    "hypot": "np.hypot",
    "i zero": "np.i0",
    "identity": "np.identity",
    "I info": "np.iinfo",
    "imag": "np.imag",
    "in one d": "np.in1d",
    "index exp": "np.index_exp@",
    "indices": "np.indices",
    "inexact": "np.inexact",
    "inf": "np.inf@",
    "infinity": "np.inf@",
    "info": "np.info",
    "infty": "np.infty@",
    "inner": "np.inner",
    "insert": "np.insert",
    "int": "np.int",
    "int zero": "np.int0",
    "int sixteen": "np.int16",
    "int thirty two": "np.int32",
    "int sixty four": "np.int64",
    "int eight": "np.int8",
    "int as buffer": "np.int_asbuffer",
    "int C": "np.intc",
    "integer": "np.integer",
    "interp": "np.interp",
    "intersect one d": "np.intersect1d",
    "int P": "np.intp",
    "invert": "np.invert",
    "ipmt": "np.ipmt",
    "irr": "np.irr",
    "is busday": "np.is_busday",
    "is close": "np.isclose",
    "is complex": "np.iscomplex",
    "is complexobj": "np.iscomplexobj",
    "is finite": "np.isfinite",
    "is fortran": "np.isfortran",
    "is in": "np.isin",
    "is inf": "np.isinf",
    "is nan": "np.isnan",
    "is nat": "np.isnat",
    "is neginf": "np.isneginf",
    "is posinf": "np.isposinf",
    "is real": "np.isreal",
    "is realobj": "np.isrealobj",
    "is scalar": "np.isscalar",
    "is sctype": "np.issctype",
    "is subdtype": "np.issubdtype",
    "is subsctype": "np.issubsctype",
    "iterable": "np.iterable",
    "kaiser": "np.kaiser",
    "kron": "np.kron",
    "lcm": "np.lcm",
    "ldexp": "np.ldexp",
    "left shift": "np.left_shift",
    "less": "np.less",
    "less equal": "np.less_equal",
    "lex sort": "np.lexsort",
    "lib": "np.lib@",
    "linalg": "np.linalg@",
    "lin space": "np.linspace",
    "little endian": "np.little_endian@",
    "load": "np.load",
    "loads": "np.loads",
    "load text": "np.loadtxt",
    "log": "np.log",
    "log one zero": "np.log10",
    "log one p": "np.log1p",
    "log two": "np.log2",
    "log add exp": "np.logaddexp",
    "log add exp two": "np.logaddexp2",
    "logical and": "np.logical_and",
    "logical not": "np.logical_not",
    "logical or": "np.logical_or",
    "logical xor": "np.logical_xor",
    "log space": "np.logspace",
    "long": "np.long",
    "long complex": "np.longcomplex",
    "long double": "np.longdouble",
    "long float": "np.longfloat",
    "long long": "np.longlong",
    "lookfor": "np.lookfor",
    "ma": "np.ma@",
    "ma from text": "np.mafromtxt",
    "mask indices": "np.mask_indices",
    "mat": "np.mat",
    "math": "np.math@",
    "matmul": "np.matmul",
    "matrix": "np.matrix",
    "matrix lib": "np.matrixlib@",
    "max": "np.max",
    "maximum": "np.maximum",
    "maximum sctype": "np.maximum_sctype",
    "may share memory": "np.may_share_memory",
    "mean": "np.mean",
    "median": "np.median",
    "mem map": "np.memmap",
    "mesh grid": "np.meshgrid",
    "M grid": "np.mgrid@",
    "min": "np.min",
    "min scalar type": "np.min_scalar_type",
    "minimum": "np.minimum",
    "min type code": "np.mintypecode",
    "mirr": "np.mirr",
    "mod": "np.mod",
    "modf": "np.modf",
    "move axis": "np.moveaxis",
    "msort": "np.msort",
    "multiply": "np.multiply",
    "nan": "np.nan@",
    "nan to num": "np.nan_to_num",
    "nan arg max": "np.nanargmax",
    "nan arg min": "np.nanargmin",
    "nan cumprod": "np.nancumprod",
    "nan cumsum": "np.nancumsum",
    "nan max": "np.nanmax",
    "nan mean": "np.nanmean",
    "nan median": "np.nanmedian",
    "nan min": "np.nanmin",
    "nan percentile": "np.nanpercentile",
    "nan prod": "np.nanprod",
    "nan quantile": "np.nanquantile",
    "nan std": "np.nanstd",
    "nan sum": "np.nansum",
    "nan var": "np.nanvar",
    "N bytes": "np.nbytes@",
    "ND array": "np.ndarray",
    "ND enumerate": "np.ndenumerate",
    "ND fromtxt": "np.ndfromtxt",
    "ND im": "np.ndim",
    "ND index": "np.ndindex",
    "ND iter": "np.nditer",
    "negative": "np.negative",
    "nested iters": "np.nested_iters",
    "new axis": "np.newaxis@",
    "next after": "np.nextafter",
    "nonzero": "np.nonzero",
    "not equal": "np.not_equal",
    "nper": "np.nper",
    "npv": "np.npv",
    "num array": "np.numarray@",
    "number": "np.number",
    "obj two sctype": "np.obj2sctype",
    "object": "np.object",
    "object zero": "np.object0",
    "ogrid": "np.ogrid@",
    "old numeric": "np.oldnumeric@",
    "ones": "np.ones",
    "ones like": "np.ones_like",
    "outer": "np.outer",
    "pack bits": "np.packbits",
    "pad": "np.pad",
    "partition": "np.partition",
    "percentile": "np.percentile",
    "pi": "np.pi@",
    "piecewise": "np.piecewise",
    "place": "np.place",
    "pmt": "np.pmt",
    "poly": "np.poly",
    "poly one d": "np.poly1d",
    "poly add": "np.polyadd",
    "poly der": "np.polyder",
    "poly div": "np.polydiv",
    "poly fit": "np.polyfit",
    "poly int": "np.polyint",
    "poly mul": "np.polymul",
    "polynomial": "np.polynomial@",
    "poly sub": "np.polysub",
    "poly val": "np.polyval",
    "positive": "np.positive",
    "power": "np.power",
    "ppmt": "np.ppmt",
    "print function": "np.print_function@",
    "print options": "np.printoptions",
    "prod": "np.prod",
    "product": "np.product",
    "promote types": "np.promote_types",
    "ptp": "np.ptp",
    "put": "np.put",
    "put along axis": "np.put_along_axis",
    "put mask": "np.putmask",
    "pv": "np.pv",
    "quantile": "np.quantile",
    "rad two deg": "np.rad2deg",
    "radians": "np.radians",
    "random": "np.random@",
    "rate": "np.rate",
    "ravel": "np.ravel",
    "ravel multi index": "np.ravel_multi_index",
    "real": "np.real",
    "real if close": "np.real_if_close",
    "rec": "np.rec@",
    "rec array": "np.recarray",
    "rec from CSV": "np.recfromcsv",
    "rec from text": "np.recfromtxt",
    "reciprocal": "np.reciprocal",
    "record": "np.record",
    "remainder": "np.remainder",
    "repeat": "np.repeat",
    "require": "np.require",
    "reshape": "np.reshape",
    "resize": "np.resize",
    "result type": "np.result_type",
    "right shift": "np.right_shift",
    "rint": "np.rint",
    "roll": "np.roll",
    "rollaxis": "np.rollaxis",
    "roots": "np.roots",
    "rot 9 zero": "np.rot90",
    "round": "np.round",
    "row stack": "np.row_stack",
    "safe eval": "np.safe_eval",
    "save": "np.save",
    "save text": "np.savetxt",
    "save Z": "np.savez",
    "save Z compressed": "np.savez_compressed",
    "sctype two char": "np.sctype2char",
    "sctype dict": "np.sctypeDict@",
    "sctype na": "np.sctypeNA@",
    "sctypes": "np.sctypes@",
    "search sorted": "np.searchsorted",
    "select": "np.select",
    "set numeric ops": "np.set_numeric_ops",
    "set print options": "np.set_printoptions",
    "set string function": "np.set_string_function",
    "set buff size": "np.setbufsize",
    "set diff one d": "np.setdiff1d",
    "set err": "np.seterr",
    "set err call": "np.seterrcall",
    "set err obj": "np.seterrobj",
    "set xor one d": "np.setxor1d",
    "shape": "np.shape",
    "shares memory": "np.shares_memory",
    "short": "np.short",
    "show config": "np.show_config",
    "sign": "np.sign",
    "sign bit": "np.signbit",
    "signed integer": "np.signedinteger",
    "sin": "np.sin",
    "sinc": "np.sinc",
    "single": "np.single",
    "single complex": "np.singlecomplex",
    "sinh": "np.sinh",
    "size": "np.size",
    "some true": "np.sometrue",
    "sort": "np.sort",
    "sort complex": "np.sort_complex",
    "source": "np.source",
    "spacing": "np.spacing",
    "split": "np.split",
    "sqrt": "np.sqrt",
    "square": "np.square",
    "squeeze": "np.squeeze",
    "stack": "np.stack",
    "std": "np.std",
    "str": "np.str",
    "str zero": "np.str0",
    "subtract": "np.subtract",
    "sum": "np.sum",
    "swap axes": "np.swapaxes",
    "sys": "np.sys@",
    "take": "np.take",
    "take along axis": "np.take_along_axis",
    "tan": "np.tan",
    "tanh": "np.tanh",
    "tensor dot": "np.tensordot",
    "test": "np.test",
    "testing": "np.testing@",
    "tile": "np.tile",
    "timedelta sixty four": "np.timedelta64",
    "trace": "np.trace",
    "trace malloc domain": "np.tracemalloc_domain@",
    "transpose": "np.transpose",
    "trapz": "np.trapz",
    "tri": "np.tri",
    "tril": "np.tril",
    "tril indices": "np.tril_indices",
    "tril indices from": "np.tril_indices_from",
    "trim zeros": "np.trim_zeros",
    "triu": "np.triu",
    "triu indices": "np.triu_indices",
    "triu indices from": "np.triu_indices_from",
    "true divide": "np.true_divide",
    "trunc": "np.trunc",
    "type dict": "np.typeDict@",
    "type na": "np.typeNA@",
    "type codes": "np.typecodes@",
    "type name": "np.typename",
    "you byte": "np.ubyte",
    "you func": "np.ufunc",
    "you int": "np.uint",
    "you int zero": "np.uint0",
    "you int sixteen": "np.uint16",
    "you int thirty two": "np.uint32",
    "you int sixty four": "np.uint64",
    "you int eight": "np.uint8",
    "you intc": "np.uintc",
    "you intp": "np.uintp",
    "you longlong": "np.ulonglong",
    "unicode": "np.unicode",
    "union one d": "np.union1d",
    "unique": "np.unique",
    "unpack bits": "np.unpackbits",
    "unravel index": "np.unravel_index",
    "unsigned integer": "np.unsignedinteger",
    "unwrap": "np.unwrap",
    "you short": "np.ushort",
    "vander": "np.vander",
    "var": "np.var",
    "vdot": "np.vdot",
    "vectorize": "np.vectorize",
    "version": "np.version@",
    "void": "np.void",
    "void zero": "np.void0",
    "V split": "np.vsplit",
    "V stack": "np.vstack",
    "warnings": "np.warnings@",
    "where": "np.where",
    "who": "np.who",
    "zeros": "np.zeros",
    "zeros like": "np.zeros_like",
}


mod.list("py_lib_spark")
ctx.lists["user.py_lib_spark"] = {
    "builder": "spark.builder",
    "catalog": "spark.catalog",
    "config": "spark.conf",
    "create DataFrame": "spark.createDataFrame",
    "new session": "spark.newSession",
    "range": "spark.range",
    "read": "spark.read",
    "read stream": "spark.readStream",
    "spark context": "spark.sparkContext",
    "sequel": "spark.sql",
    "stop": "spark.stop",
    "streams": "spark.streams",
    "table": "spark.table",
    "udf": "spark.udf",
    "version": "spark.version",
    # --- df ---
    "agg": "agg",
    "alias": "alias",
    "approx Quantile": "approxQuantile",
    "cache": "cache",
    "checkpoint": "checkpoint",
    "coalesce": "coalesce",
    "colRegex": "colRegex",
    "collect": "collect",
    "columns": "columns",
    "corr": "corr",
    "count": "count",
    "cov": "cov",
    "createGlobal Temp View": "createGlobalTempView",
    "create Or Replace Global Temp View": "createOrReplaceGlobalTempView",
    "create Or Replace Temp View": "createOrReplaceTempView",
    "create Temp View": "createTempView",
    "crossJoin": "crossJoin",
    "crosstab": "crosstab",
    "cube": "cube",
    "describe": "describe",
    "distinct": "distinct",
    "drop": "drop",
    "drop Duplicates": "dropDuplicates",
    "drop duplicates": "drop_duplicates",
    "drop NA": "dropna",
    "dtypes": "dtypes",
    "except All": "exceptAll",
    "explain": "explain",
    "fill NA": "fillna",
    "filter": "filter",
    "first": "first",
    "for each": "foreach",
    "for each Partition": "foreachPartition",
    "freq Items": "freqItems",
    "group By": "groupBy",
    # "group by": "groupby",
    "head": "head",
    "hint": "hint",
    "intersect": "intersect",
    "intersectAll": "intersectAll",
    "is Local": "isLocal",
    "is Streaming": "isStreaming",
    "is cached": "is_cached",
    "join": "join",
    "limit": "limit",
    "local Checkpoint": "localCheckpoint",
    "NA": "na",
    "order By": "orderBy",
    "persist": "persist",
    "print Schema": "printSchema",
    "random Split": "randomSplit",
    "rdd": "rdd",
    "register Temp Table": "registerTempTable",
    "repartition": "repartition",
    "repartition By Range": "repartitionByRange",
    "replace": "replace",
    "rollup": "rollup",
    "sample": "sample",
    "sample By": "sampleBy",
    "schema": "schema",
    "select": "select",
    "select expression": "selectExpr",
    "show": "show",
    "sort": "sort",
    "sort Within Partitions": "sortWithinPartitions",
    # "sql_ctx": "sql_ctx",
    "stat": "stat",
    "storage Level": "storageLevel",
    "subtract": "subtract",
    "summary": "summary",
    "take": "take",
    "to DF": "toDF",
    "to dataframe": "toDF",
    "to jason": "toJSON",
    "to Local Iterator": "toLocalIterator",
    "to Pandas": "toPandas",
    "transform": "transform",
    "union": "union",
    "union All": "unionAll",
    "union By Name": "unionByName",
    "unpersist": "unpersist",
    "where": "where",
    "with Column": "withColumn",
    "with Column Renamed": "withColumnRenamed",
    "with Watermark": "withWatermark",
    "write": "write",
    "write Stream": "writeStream",
}
