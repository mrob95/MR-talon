pronunciation   = "Python"
title_contexts  = [".py", "python", "jupyterlab"]
function_prefix = "fun"
template_prefix = "template"
method_prefix   = "meth"
magic_prefix    = "magic"
decorator_prefix    = "atty"

[functions]
"(int | integer)"       = "int"
"(iter | hitter) items" = "iteritems"
"append"                = "append"
"apply"                 = "apply"
"bites" = "bytes"
"breakpoint" = "breakpoint"
"capitalise"            = "capitalize"
"clear"                 = "clear"
"callable"              = "callable"
"character"             = "chr"
"copy"                  = "copy"
"count"                 = "count"
"ends with"             = "endswith"
"enumerate"             = "enumerate"
"extend"                = "extend"
"find all"              = "find_all"
"find"                  = "find"
"float"                 = "float"
"head"                  = "head"
"get attribute"         = "getattr"
"has attribute"         = "hasattr"
"join"                  = "join"
"index"                 = "index"
"insert"                = "insert"
"items"                 = "items"
"is instance"           = "isinstance"
"init"                  = "__init__"
"keys"                  = "keys"
"length"                = "len"
"list"                  = "list"
"lower"                 = "lower"
"(min | minimum)"       = "min"
"(max | maximum)"       = "max"
"pop"                   = "pop"
"print"                 = "print"
"quit" = "quit"
"range"                 = "range"
"read lines"            = "readlines"
"read"                  = "read"
"remove"                = "remove"
"replace"               = "replace"
"reverse"               = "reverse"
"set default"           = "setdefault"
"sort"                  = "sort"
"string"                = "str"
"strip"                 = "strip"
"split"                 = "split"
"starts with"           = "startswith"
"sum"                   = "sum"
"title"                 = "title"
"tuple" = "tuple"
"type"                  = "type"
"update"                = "update"
"upper"                 = "upper"
"values"                = "values"
"write"                 = "write"

[commands]
"args and kwargs"     = "*args, **kwargs"
"assign"              = " = "
"assert"              = "assert "
"breaker"             = "break"
"double under"        = ["____", "left:2"]
"for each"            = ["for  in :", "left:5"]
"for loop"            = ["for i in range():", "left:2"]
"from import"         = ["from  import ", "home right right right right right"]
"if name is main"     = "if __name__ == '__main__':\n"
"iffy"      = ["if :", "left"]
"iffae"      = ["if :", "left"]
"iffae not"           = ["if not :", "left"]
"import"              = "import "
"insert long comment" = ["''''''", "left:3, enter:2, up"]
"insert doc string"   = ['""""""', "left:3, enter:2, up"]
"lambda"              = ["lambda :", "left"]
"lodge and"           = " and "
"lodge as"            = " as "
"lodge else"          = " else "
"lodge if"            = " if "
"lodge in"            = " in "
"lodge is"            = " is "
"lodge is not"        = " is not "
"lodge not"           = " not "
"lodge not in"       = " not in "
"lodge or"            = " or "
"lodge for"           = " for "
"return"              = "return "
"shell iffae"         = ["elif :", "left"]
"shells"              = "else:"
"set trace" = "import pdb; pdb.set_trace()"
"value false"         = "False"
"value none"          = "None"
"value true"          = "True"
"while loop"          = ["while :", "left"]
"with open"           = ["with open() as f:", "left:8"]

[unary_methods]
"integer"          = "int"
"iter"        = "iter"
"length"           = "len"
"negation"    = "neg"
"boolean"     = "nonzero"
"non zero"     = "nonzero"
"reper" = "repr"
"representation" = "repr"
"absolute"                 = "abs"
"ceiling"                  = "ceil"
"call"                     = "call"
"dir"                      = "dir"
"enter"                    = "enter"
"floor"                    = "floor"
"invert"                   = "invert"
"name"                     = "name"
"new"                      = "new"
"positive"                 = "pos"
"size of"                  = "sizeof"
"string"                   = "str"
"truncate"                 = "trunc"
"unicode"                  = "unicode"

[binary_methods]
"add"                      = "add"
"subtract"                 = "sub"
"multiply"                 = "mul"
"divide"                   = "div"
"floor divide"             = "floordiv"
"equal"                    = "eq"
"not equal"                = "ne"
"less than"                = "lt"
"greater than"             = "gt"
"less equal"               = "le"
"greater equal"            = "ge"
"modulo"                   = "mod"
"power"                    = "pow"
"and"                      = "and"
"or"                       = "or"
"ex or"                    = "xor"
"left shift"     = "lshift"
"right shift"    = "rshift"

[misc_methods]
"init"             = ["init", "self"]
"new"              = ["new", "cls"]
"delete"           = ["del", "self"]
"get attribute"    = ["getattr", "self, name"]
"delete attribute" = ["delattr", "self, name"]
"set attribute"    = ["setattr", "self, name, value"]
"get item"         = ["getitem", "self, key"]
"set item"         = ["setitem", "self, key, value"]
"delete item"      = ["delitem", "self, key"]
"contains"         = ["contains", "self, item"]
"missing"          = ["missing", "self, key"]
"round"            = ["round", "self, n"]
"exit"             = ["exit", "type, value, traceback"]

[decorators]
"data class" = "dataclass"
"property" = "property"
"setter" = [".setter", "left:7"]

[exceptions]
"arithmetic"         = "ArithmeticError"
"assertion"          = "AssertionError"
"attribute"          = "AttributeError"
"environment"        = "EnvironmentError"
"EOF"                = "EOFError"
"exception"          = "Exception"
"floating-point"     = "FloatingPointError"
"import"             = "ImportError"
"index"              = "IndexError"
"IO"                 = "IOError"
"key"                = "KeyError"
"keyboard interrupt" = "KeyboardInterrupt"
"lookup"             = "LookupError"
"name"               = "NameError"
"not implemented"    = "NotImplementedError"
"OS"                 = "OSError"
"overflow"           = "OverflowError"
"runtime"            = "RuntimeError"
"standard"           = "StandardError"
"stop iteration"     = "StopIteration"
"syntax"             = "SyntaxError"
"system exit"        = "SystemExit"
"type"               = "TypeError"
"unbound local"      = "UnboundLocalError"
"value"              = "ValueError"
"zero division"      = "ZeroDivisionError"

[types]
"(inter | integer)"   = "int"
"(dict | dictionary)" = "Dict"
"any"                 = "Any"
"callable"            = "Callable"
"float"               = "float"
"generic"             = "Generic"
"iterator"            = "Iterator"
"iterable"            = "Iterable"
"list"                = "List"
"named tuple"         = "NamedTuple"
"new type"            = "NewType"
"sequence"            = "Sequence"
"string"              = "str"
"tuple"               = "Tuple"
"type var"            = "TypeVar"
"union"               = "Union"

[docs]
"pie test"           = "https://docs.pytest.org/en/latest/reference.html"
"standard [library]" = "https://docs.python.org/3/library/index.html"


[cheatsheets]
"numb pie"           = "numpy"
"pandas"             = "pandas"
"sigh pie"           = "scipy"
"sigh [kit] learn"   = "sklearn"

[templates]
